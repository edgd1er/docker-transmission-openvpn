name: Docker CI buildx armhf+amd64

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
      - tbt_v4
      - tbt_v3
      - dev
  push:
    branches:
      - master
      - tbt_v4
      - tbt_v3
      - dev
    tags:

    paths-ignore:
      - .circleci/*
      - .github/**
      - .gitignore
      - .dockerignore

env:
  IMAGE: transmission-openvpn
  REVISION: ${{  github.ref_name }}
  TAG: ${{  github.ref_name }}
  LIBEVENT_VERSION: "2.1.12-stable"
  TBT_VERSION: ${{  github.ref_name }}

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
          install: true
          use: true
      - name: Builder instance name
        run: echo ${{ steps.buildx.outputs.name }}
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Login to Docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./
          file: ./Dockerfile
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          # removed linux/arm64
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          build-args: |
            REVISION=${{ env.REVISION }}
            LIBEVENT_VERSION=${{ env.LIBEVENT_VERSION }}
            TBT_VERSION=${{ env.TBT_VERSION }}
          tags: ${{ secrets.DOCKER_USER }}/${{ env.IMAGE }}:${{ env.TAG }}
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ secrets.DOCKER_USER }}/${{ env.IMAGE }}:${{ env.TAG }}
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/${{ secrets.DOCKER_USER }}/${{ env.IMAGE }}:${{ env.TAG }}'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results.sarif'
